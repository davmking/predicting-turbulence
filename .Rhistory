Re*Factor_Fr, data)[,-1]
pred_2_int_LASSO <- model.matrix(log(R_moment_2) ~ log(St) + Re + Factor_Fr +
log(St)*Re*Factor_Fr, data)[,-1]
pred_2_poly <- model.matrix(log(R_moment_2) ~ log(St) + poly(Re, 2) +
Factor_Fr, data)[,-1]
pred_2_int_poly <- model.matrix(log(R_moment_2) ~ log(St) + poly(Re, 2) +
Factor_Fr + poly(Re, 2)*Factor_Fr, data)[,-1]
pred_2_int_poly_LASSO <- model.matrix(log(R_moment_2) ~ log(St) + poly(Re, 2) +
Factor_Fr + log(St)*poly(Re, 2)*Factor_Fr, data)[,-1]
mom_2_lin_1_mse <- rep(0, 10)
mom_2_lin_2_mse <- rep(0, 10)
mom_2_lin_3_mse <- rep(0, 10)
mom_2_lin_4_mse <- rep(0, 10)
mom_2_lin_5_mse <- rep(0, 10)
mom_2_lin_6_mse <- rep(0, 10)
mom_2_lin_7_mse <- rep(0, 10)
mom_2_ridge_1_mse <- rep(0, 10)
mom_2_ridge_2_mse <- rep(0, 10)
mom_2_lasso_1_mse <- rep(0, 10)
mom_2_lasso_2_mse <- rep(0, 10)
mom_2_poly_1_mse <- rep(0, 10)
mom_2_poly_2_mse <- rep(0, 10)
mom_2_ridge_3_mse <- rep(0, 10)
mom_2_ridge_4_mse <- rep(0, 10)
mom_2_lasso_3_mse <- rep(0, 10)
mom_2_lasso_4_mse <- rep(0, 10)
mom_2_lasso_5_mse <- rep(0, 10)
mom_2_lasso_6_mse <- rep(0, 10)
for(i in 1:10){
indices <- folds$splits[[i]][[2]]
correct_indices <- vector("logical", 89)
for(j in 1:89){
if(j %in% indices){
correct_indices[j] = T
} else{
correct_indices[j] = F
}
}
data_tr <- data[correct_indices,]
data_test <- data[!correct_indices,]
# Linear
mom_2_lin_1 <- lm(log(R_moment_2) ~ log(St) + Re, data_tr)
mom_2_lin_1_mse[i] <- mean((predict(mom_2_lin_1, data_test) -
log(data_test$R_moment_2))^2)
mom_2_lin_2 <- lm(log(R_moment_2) ~ log(St) + Re + log(St)*Re, data_tr)
mom_2_lin_2_mse[i] <- mean((predict(mom_2_lin_2, data_test) -
log(data_test$R_moment_2))^2)
mom_2_lin_3 <- lm(log(R_moment_2) ~ Re + Factor_Fr, data_tr)
mom_2_lin_3_mse[i] <- mean((predict(mom_2_lin_3, data_test) -
log(data_test$R_moment_2))^2)
mom_2_lin_4 <- lm(log(R_moment_2) ~ Re + Factor_Fr + Re*Factor_Fr, data_tr)
mom_2_lin_4_mse[i] <- mean((predict(mom_2_lin_4, data_test) -
log(data_test$R_moment_2))^2)
mom_2_lin_5 <- lm(log(R_moment_2) ~ log(St) + Re + Factor_Fr, data_tr)
mom_2_lin_5_mse[i] <- mean((predict(mom_2_lin_5, data_test) -
log(data_test$R_moment_2))^2)
mom_2_lin_6 <- lm(log(R_moment_2) ~ log(St) + Re + Factor_Fr + Re*Factor_Fr,
data_tr)
mom_2_lin_6_mse[i] <- mean((predict(mom_2_lin_6, data_test) -
log(data_test$R_moment_2))^2)
mom_2_lin_7 <- lm(log(R_moment_2) ~ log(St) + Re + Factor_Fr +
log(St)*Re*Factor_Fr, data_tr)
mom_2_lin_7_mse[i] <- mean((predict(mom_2_lin_7, data_test) -
log(data_test$R_moment_2))^2)
# Shrinkage
set.seed(1)
mom_2_ridge_1 <- glmnet(pred_2[correct_indices,], resp_2[correct_indices],
alpha = 0, lambda = grid, thresh = 1e-12)
cv.out_m2_r1 <- cv.glmnet(pred_2[correct_indices,], resp_2[correct_indices],
alpha = 0)
bestlam_m2_r1 <- cv.out_m2_r1$lambda.min
ridge.pred_m2_r1 <- predict(mom_2_ridge_1, s = bestlam_m2_r1,
newx = pred_2[!correct_indices,])
mom_2_ridge_1_mse[i] <- mean((ridge.pred_m2_r1 - log(data_test$R_moment_2))^2)
mom_2_ridge_2 <- glmnet(pred_2_int[correct_indices,], resp_2[correct_indices],
alpha = 0, lambda = grid,  thresh = 1e-12)
cv.out_m2_r2 <- cv.glmnet(pred_2_int[correct_indices,],
resp_2[correct_indices], alpha = 0)
bestlam_m2_r2 <- cv.out_m2_r2$lambda.min
ridge.pred_m2_r2 <- predict(mom_2_ridge_2, s = bestlam_m2_r2,
newx = pred_2_int[!correct_indices,])
mom_2_ridge_2_mse[i] <- mean((ridge.pred_m2_r2 - log(data_test$R_moment_2))^2)
set.seed(1)
mom_2_lasso_1 <- glmnet(pred_2[correct_indices,], resp_2[correct_indices],
alpha = 1, lambda = grid)
cv.out_m2_l1 <- cv.glmnet(pred_2[correct_indices,], resp_2[correct_indices],
alpha = 1)
bestlam_m2_l1 <- cv.out_m2_l1$lambda.min
lasso.pred_m2_l1 <- predict(mom_2_lasso_1, s = bestlam_m2_l1,
newx = pred_2[!correct_indices,])
mom_2_lasso_1_mse[i] <- mean((lasso.pred_m2_l1 - log(data_test$R_moment_2))^2)
mom_2_lasso_2 <- glmnet(pred_2_int_LASSO[correct_indices,],
resp_2[correct_indices], alpha = 1, lambda = grid)
cv.out_m2_l2 <- cv.glmnet(pred_2_int_LASSO[correct_indices,],
resp_2[correct_indices], alpha = 1)
bestlam_m2_l2 <- cv.out_m2_l2$lambda.min
lasso.pred_m2_l2 <- predict(mom_2_lasso_2, s = bestlam_m2_l2,
newx = pred_2_int_LASSO[!correct_indices,])
mom_2_lasso_2_mse[i] <- mean((lasso.pred_m2_l2 - log(data_test$R_moment_2))^2)
# Polynomial
mom_2_poly_1 <- lm(log(R_moment_2) ~ poly(Re, 2) + log(St) + Factor_Fr,
data_tr)
mom_2_poly_1_mse[i] <- mean((predict(mom_2_poly_1, data_test) -
log(data_test$R_moment_2))^2)
mom_2_poly_2 <- lm(log(R_moment_2) ~ poly(Re, 2) + log(St) + Factor_Fr +
poly(Re, 2)*Factor_Fr, data_tr)
mom_2_poly_2_mse[i] <- mean((predict(mom_2_poly_2, data_test) -
log(data_test$R_moment_2))^2)
# Polynomial Shrinkage
set.seed(1)
mom_2_ridge_3 <- glmnet(pred_2_poly[correct_indices,], resp_2[correct_indices],
alpha = 0, lambda = grid, thresh = 1e-12)
cv.out_m2_r3 <- cv.glmnet(pred_2_poly[correct_indices,],
resp_2[correct_indices], alpha = 0)
bestlam_m2_r3 <- cv.out_m2_r3$lambda.min
ridge.pred_m2_r3 <- predict(mom_2_ridge_3, s = bestlam_m2_r3,
newx = pred_2_poly[!correct_indices,])
mom_2_ridge_3_mse[i] <- mean((ridge.pred_m2_r3 - log(data_test$R_moment_2))^2)
mom_2_ridge_4 <- glmnet(pred_2_int_poly[correct_indices,],
resp_2[correct_indices], alpha = 0,
lambda = grid, thresh = 1e-12)
cv.out_m2_r4 <- cv.glmnet(pred_2_int_poly[correct_indices,],
resp_2[correct_indices], alpha = 0)
bestlam_m2_r4 <- cv.out_m2_r4$lambda.min
ridge.pred_m2_r4 <- predict(mom_2_ridge_4, s = bestlam_m2_r4,
newx = pred_2_int_poly[!correct_indices,])
mom_2_ridge_4_mse[i] <- mean((ridge.pred_m2_r4 - log(data_test$R_moment_2))^2)
set.seed(1)
mom_2_lasso_3 <- glmnet(pred_2_poly[correct_indices,],
resp_2[correct_indices], alpha = 1, lambda = grid)
cv.out_m2_l3 <- cv.glmnet(pred_2_poly[correct_indices,],
resp_2[correct_indices], alpha = 1)
bestlam_m2_l3 <- cv.out_m2_l3$lambda.min
lasso.pred_m2_l3 <- predict(mom_2_lasso_3, s = bestlam_m2_l3,
newx = pred_2_poly[!correct_indices,])
mom_2_lasso_3_mse[i] <- mean((lasso.pred_m2_l3 - log(data_test$R_moment_2))^2)
mom_2_lasso_4 <- glmnet(pred_2_int_poly_LASSO[correct_indices,],
resp_2[correct_indices], alpha = 1, lambda = grid)
cv.out_m2_l4 <- cv.glmnet(pred_2_int_poly_LASSO[correct_indices,],
resp_2[correct_indices], alpha = 1)
bestlam_m2_l4 <- cv.out_m2_l4$lambda.min
lasso.pred_m2_l4 <- predict(mom_2_lasso_4, s = bestlam_m2_l4,
newx = pred_2_int_poly_LASSO[!correct_indices,])
mom_2_lasso_4_mse[i] <- mean((lasso.pred_m2_l4 - log(data_test$R_moment_2))^2)
set.seed(1)
mom_2_lasso_5 <- glmnet(pred_2_int[correct_indices,],
resp_2[correct_indices], alpha = 1, lambda = grid)
cv.out_m2_l5 <- cv.glmnet(pred_2_int[correct_indices,],
resp_2[correct_indices], alpha = 1)
bestlam_m2_l5 <- cv.out_m2_l5$lambda.min
lasso.pred_m2_l5 <- predict(mom_2_lasso_5, s = bestlam_m2_l5,
newx = pred_2_int[!correct_indices,])
mom_2_lasso_5_mse[i] <- mean((lasso.pred_m2_l5 - log(data_test$R_moment_2))^2)
mom_2_lasso_6 <- glmnet(pred_2_int_poly[correct_indices,],
resp_2[correct_indices], alpha = 1, lambda = grid)
cv.out_m2_l6 <- cv.glmnet(pred_2_int_poly[correct_indices,],
resp_2[correct_indices], alpha = 1)
bestlam_m2_l6 <- cv.out_m2_l6$lambda.min
lasso.pred_m2_l6 <- predict(mom_2_lasso_6, s = bestlam_m2_l6,
newx = pred_2_int_poly[!correct_indices,])
mom_2_lasso_6_mse[i] <- mean((lasso.pred_m2_l6 - log(data_test$R_moment_2))^2)
}
get_se <- function(mse){
ret = 0
for(i in 1:10){
ret = ret + (mse[i] - mean(mse))^2
}
return(sqrt(ret / 9))
}
moment_2_mse <- data.frame(t(c(Model = "mom_2_lin_1", MSE = mean(mom_2_lin_1_mse),
SD = get_se(mom_2_lin_1_mse))))
moment_2_mse <- rbind(moment_2_mse,
c("mom_2_lin_2", mean(mom_2_lin_2_mse),
get_se(mom_2_lin_2_mse)),
c("mom_2_lin_3", mean(mom_2_lin_3_mse),
get_se(mom_2_lin_3_mse)),
c("mom_2_lin_4", mean(mom_2_lin_4_mse),
get_se(mom_2_lin_4_mse)),
c("mom_2_lin_5", mean(mom_2_lin_5_mse),
get_se(mom_2_lin_5_mse)),
c("mom_2_lin_6", mean(mom_2_lin_6_mse),
get_se(mom_2_lin_6_mse)),
c("mom_2_lin_7", mean(mom_2_lin_7_mse),
get_se(mom_2_lin_7_mse)),
c("mom_2_ridge_1", mean(mom_2_ridge_1_mse),
get_se(mom_2_ridge_1_mse)),
c("mom_2_ridge_2", mean(mom_2_ridge_2_mse),
get_se(mom_2_ridge_2_mse)),
c("mom_2_lasso_1", mean(mom_2_lasso_1_mse),
get_se(mom_2_lasso_1_mse)),
c("mom_2_lasso_2", mean(mom_2_lasso_2_mse),
get_se(mom_2_lasso_2_mse)),
c("mom_2_poly_1", mean(mom_2_poly_1_mse),
get_se(mom_2_poly_1_mse)),
c("mom_2_poly_2", mean(mom_2_poly_2_mse),
get_se(mom_2_poly_2_mse)),
c("mom_2_ridge_3", mean(mom_2_ridge_3_mse),
get_se(mom_2_ridge_3_mse)),
c("mom_2_ridge_4", mean(mom_2_ridge_4_mse),
get_se(mom_2_ridge_4_mse)),
c("mom_2_lasso_3", mean(mom_2_lasso_3_mse),
get_se(mom_2_lasso_3_mse)),
c("mom_2_lasso_4", mean(mom_2_lasso_4_mse),
get_se(mom_2_lasso_4_mse)),
c("mom_2_lasso_5", mean(mom_2_lasso_5_mse),
get_se(mom_2_lasso_5_mse),
c("mom_2_lasso_6", mean(mom_2_lasso_6_mse),
get_se(mom_2_lasso_6_mse))))
moment_2_mse %>%
arrange(MSE) %>%
knitr::kable(digits = 3)
exp(1)
exp(4.345)
data$R_moment_2
plot(moment_2)
summary(moment_2)
plot(lm(log(R_moment_3) ~ log(St) + poly(Re, 2) + Factor_Fr +
poly(Re, 2)*Factor_Fr, data))
pred_3_int_poly <- model.matrix(log(R_moment_3) ~ log(St) + poly(Re, 2) +
Factor_Fr + poly(Re, 2)*Factor_Fr, data)[,-1]
resp_3 <- log(data$R_moment_3)
set.seed(325)
moment_3_cv <- cv.glmnet(pred_3_int_poly, resp_3, alpha = 1)
moment_3_bestlam <- moment_3_cv$lambda.min
moment_3 <- glmnet(pred_3_int_poly, resp_3, alpha = 1,
lambda = moment_3_bestlam)
#coef(moment_3)
moment_3_predictions <- predict(moment_3, moment_3_bestlam,
newx = pred_3_int_poly)
tss <- sum((log(data$R_moment_3) - mean(log(data$R_moment_3)))^2)
rss <- sum((moment_3_predictions - log(data$R_moment_3))^2)
rsq <- 1 - rss/tss
#rsq
#mean(mom_3_lasso_6_mse)
#plot(lm(log(R_moment_3) ~ log(St) + poly(Re, 2) + Factor_Fr +
#poly(Re, 2)*Factor_Fr, data))
rsq
moment_3_bestlam
mean(mom_3_lasso_6_mse)
pred_3 <- model.matrix(log(R_moment_3) ~ log(St) + Re + Factor_Fr, data)[,-1]
resp_3 <- log(data$R_moment_3)
pred_3_int <- model.matrix(log(R_moment_3) ~ log(St) + Re + Factor_Fr +
Re*Factor_Fr, data)[,-1]
pred_3_int_LASSO <- model.matrix(log(R_moment_3) ~ log(St) + Re + Factor_Fr +
log(St)*Re*Factor_Fr, data)[,-1]
pred_3_poly <- model.matrix(log(R_moment_3) ~ log(St) + poly(Re, 2) +
Factor_Fr, data)[,-1]
pred_3_int_poly <- model.matrix(log(R_moment_3) ~ log(St) + poly(Re, 2) +
Factor_Fr + poly(Re, 2)*Factor_Fr, data)[,-1]
pred_3_int_poly_LASSO <- model.matrix(log(R_moment_3) ~ log(St) + poly(Re, 2) +
Factor_Fr + log(St)*poly(Re, 2)*Factor_Fr, data)[,-1]
mom_3_lin_1_mse <- rep(0, 10)
mom_3_lin_2_mse <- rep(0, 10)
mom_3_lin_3_mse <- rep(0, 10)
mom_3_lin_4_mse <- rep(0, 10)
mom_3_lin_5_mse <- rep(0, 10)
mom_3_lin_6_mse <- rep(0, 10)
mom_3_lin_7_mse <- rep(0, 10)
mom_3_ridge_1_mse <- rep(0, 10)
mom_3_ridge_2_mse <- rep(0, 10)
mom_3_lasso_1_mse <- rep(0, 10)
mom_3_lasso_2_mse <- rep(0, 10)
mom_3_poly_1_mse <- rep(0, 10)
mom_3_poly_2_mse <- rep(0, 10)
mom_3_ridge_3_mse <- rep(0, 10)
mom_3_ridge_4_mse <- rep(0, 10)
mom_3_lasso_3_mse <- rep(0, 10)
mom_3_lasso_4_mse <- rep(0, 10)
mom_3_lasso_5_mse <- rep(0, 10)
mom_3_lasso_6_mse <- rep(0, 10)
for(i in 1:10){
indices <- folds$splits[[i]][[2]]
correct_indices <- vector("logical", 89)
for(j in 1:89){
if(j %in% indices){
correct_indices[j] = T
} else{
correct_indices[j] = F
}
}
data_tr <- data[correct_indices,]
data_test <- data[!correct_indices,]
# Linear
mom_3_lin_1 <- lm(log(R_moment_3) ~ log(St) + Re, data_tr)
mom_3_lin_1_mse[i] <- mean((predict(mom_3_lin_1, data_test) -
log(data_test$R_moment_3))^2)
mom_3_lin_2 <- lm(log(R_moment_3) ~ log(St) + Re + log(St)*Re, data_tr)
mom_3_lin_2_mse[i] <- mean((predict(mom_3_lin_2, data_test) -
log(data_test$R_moment_3))^2)
mom_3_lin_3 <- lm(log(R_moment_3) ~ Re + Factor_Fr, data_tr)
mom_3_lin_3_mse[i] <- mean((predict(mom_3_lin_3, data_test) -
log(data_test$R_moment_3))^2)
mom_3_lin_4 <- lm(log(R_moment_3) ~ Re + Factor_Fr + Re*Factor_Fr, data_tr)
mom_3_lin_4_mse[i] <- mean((predict(mom_3_lin_4, data_test) -
log(data_test$R_moment_3))^2)
mom_3_lin_5 <- lm(log(R_moment_3) ~ log(St) + Re + Factor_Fr, data_tr)
mom_3_lin_5_mse[i] <- mean((predict(mom_3_lin_5, data_test) -
log(data_test$R_moment_3))^2)
mom_3_lin_6 <- lm(log(R_moment_3) ~ log(St) + Re + Factor_Fr + Re*Factor_Fr,
data_tr)
mom_3_lin_6_mse[i] <- mean((predict(mom_3_lin_6, data_test) -
log(data_test$R_moment_3))^2)
mom_3_lin_7 <- lm(log(R_moment_3) ~ log(St) + Re + Factor_Fr +
log(St)*Re*Factor_Fr, data_tr)
mom_3_lin_7_mse[i] <- mean((predict(mom_3_lin_7, data_test) -
log(data_test$R_moment_3))^2)
# Shrinkage
set.seed(1)
mom_3_ridge_1 <- glmnet(pred_3[correct_indices,], resp_3[correct_indices],
alpha = 0, lambda = grid, thresh = 1e-12)
cv.out_m3_r1 <- cv.glmnet(pred_3[correct_indices,], resp_3[correct_indices],
alpha = 0)
bestlam_m3_r1 <- cv.out_m3_r1$lambda.min
ridge.pred_m3_r1 <- predict(mom_3_ridge_1, s = bestlam_m3_r1,
newx = pred_3[!correct_indices,])
mom_3_ridge_1_mse[i] <- mean((ridge.pred_m3_r1 - log(data_test$R_moment_3))^2)
mom_3_ridge_2 <- glmnet(pred_3_int[correct_indices,], resp_3[correct_indices],
alpha = 0, lambda = grid,  thresh = 1e-12)
cv.out_m3_r2 <- cv.glmnet(pred_3_int[correct_indices,],
resp_3[correct_indices], alpha = 0)
bestlam_m3_r2 <- cv.out_m3_r2$lambda.min
ridge.pred_m3_r2 <- predict(mom_3_ridge_2, s = bestlam_m3_r2,
newx = pred_3_int[!correct_indices,])
mom_3_ridge_2_mse[i] <- mean((ridge.pred_m3_r2 - log(data_test$R_moment_3))^2)
set.seed(1)
mom_3_lasso_1 <- glmnet(pred_3[correct_indices,], resp_3[correct_indices],
alpha = 1, lambda = grid)
cv.out_m3_l1 <- cv.glmnet(pred_3[correct_indices,], resp_3[correct_indices],
alpha = 1)
bestlam_m3_l1 <- cv.out_m3_l1$lambda.min
lasso.pred_m3_l1 <- predict(mom_3_lasso_1, s = bestlam_m3_l1,
newx = pred_3[!correct_indices,])
mom_3_lasso_1_mse[i] <- mean((lasso.pred_m3_l1 - log(data_test$R_moment_3))^2)
mom_3_lasso_2 <- glmnet(pred_3_int_LASSO[correct_indices,],
resp_3[correct_indices], alpha = 1, lambda = grid)
cv.out_m3_l2 <- cv.glmnet(pred_3_int_LASSO[correct_indices,],
resp_3[correct_indices], alpha = 1)
bestlam_m3_l2 <- cv.out_m3_l2$lambda.min
lasso.pred_m3_l2 <- predict(mom_3_lasso_2, s = bestlam_m3_l2,
newx = pred_3_int_LASSO[!correct_indices,])
mom_3_lasso_2_mse[i] <- mean((lasso.pred_m3_l2 - log(data_test$R_moment_3))^2)
# Polynomial
mom_3_poly_1 <- lm(log(R_moment_3) ~ poly(Re, 2) + log(St) + Factor_Fr,
data_tr)
mom_3_poly_1_mse[i] <- mean((predict(mom_3_poly_1, data_test) -
log(data_test$R_moment_3))^2)
mom_3_poly_2 <- lm(log(R_moment_3) ~ poly(Re, 2) + log(St) + Factor_Fr +
poly(Re, 2)*Factor_Fr, data_tr)
mom_3_poly_2_mse[i] <- mean((predict(mom_3_poly_2, data_test) -
log(data_test$R_moment_3))^2)
# Polynomial Shrinkage
set.seed(1)
mom_3_ridge_3 <- glmnet(pred_3_poly[correct_indices,], resp_3[correct_indices],
alpha = 0, lambda = grid, thresh = 1e-12)
cv.out_m3_r3 <- cv.glmnet(pred_3_poly[correct_indices,],
resp_3[correct_indices], alpha = 0)
bestlam_m3_r3 <- cv.out_m3_r3$lambda.min
ridge.pred_m3_r3 <- predict(mom_3_ridge_3, s = bestlam_m3_r3,
newx = pred_3_poly[!correct_indices,])
mom_3_ridge_3_mse[i] <- mean((ridge.pred_m3_r3 - log(data_test$R_moment_3))^2)
mom_3_ridge_4 <- glmnet(pred_3_int_poly[correct_indices,],
resp_3[correct_indices], alpha = 0,
lambda = grid, thresh = 1e-12)
cv.out_m3_r4 <- cv.glmnet(pred_3_int_poly[correct_indices,],
resp_3[correct_indices], alpha = 0)
bestlam_m3_r4 <- cv.out_m3_r4$lambda.min
ridge.pred_m3_r4 <- predict(mom_3_ridge_4, s = bestlam_m3_r4,
newx = pred_3_int_poly[!correct_indices,])
mom_3_ridge_4_mse[i] <- mean((ridge.pred_m3_r4 - log(data_test$R_moment_3))^2)
set.seed(1)
mom_3_lasso_3 <- glmnet(pred_3_poly[correct_indices,],
resp_3[correct_indices], alpha = 1, lambda = grid)
cv.out_m3_l3 <- cv.glmnet(pred_3_poly[correct_indices,],
resp_3[correct_indices], alpha = 1)
bestlam_m3_l3 <- cv.out_m3_l3$lambda.min
lasso.pred_m3_l3 <- predict(mom_3_lasso_3, s = bestlam_m3_l3,
newx = pred_3_poly[!correct_indices,])
mom_3_lasso_3_mse[i] <- mean((lasso.pred_m3_l3 - log(data_test$R_moment_3))^2)
mom_3_lasso_4 <- glmnet(pred_3_int_poly_LASSO[correct_indices,],
resp_3[correct_indices], alpha = 1, lambda = grid)
cv.out_m3_l4 <- cv.glmnet(pred_3_int_poly_LASSO[correct_indices,],
resp_3[correct_indices], alpha = 1)
bestlam_m3_l4 <- cv.out_m3_l4$lambda.min
lasso.pred_m3_l4 <- predict(mom_3_lasso_4, s = bestlam_m3_l4,
newx = pred_3_int_poly_LASSO[!correct_indices,])
mom_3_lasso_4_mse[i] <- mean((lasso.pred_m3_l4 - log(data_test$R_moment_3))^2)
set.seed(1)
mom_3_lasso_5 <- glmnet(pred_3_int[correct_indices,],
resp_3[correct_indices], alpha = 1, lambda = grid)
cv.out_m3_l5 <- cv.glmnet(pred_3_int[correct_indices,],
resp_3[correct_indices], alpha = 1)
bestlam_m3_l5 <- cv.out_m3_l5$lambda.min
lasso.pred_m3_l5 <- predict(mom_3_lasso_5, s = bestlam_m3_l5,
newx = pred_3_int[!correct_indices,])
mom_3_lasso_5_mse[i] <- mean((lasso.pred_m3_l5 - log(data_test$R_moment_3))^2)
mom_3_lasso_6 <- glmnet(pred_3_int_poly[correct_indices,],
resp_3[correct_indices], alpha = 1, lambda = grid)
cv.out_m3_l6 <- cv.glmnet(pred_3_int_poly[correct_indices,],
resp_3[correct_indices], alpha = 1)
bestlam_m3_l6 <- cv.out_m3_l6$lambda.min
lasso.pred_m3_l6 <- predict(mom_3_lasso_6, s = bestlam_m3_l6,
newx = pred_3_int_poly[!correct_indices,])
mom_3_lasso_6_mse[i] <- mean((lasso.pred_m3_l6 - log(data_test$R_moment_3))^2)
}
mean(mom_3_lasso_6_mse)
pred_4_int_poly <- model.matrix(log(R_moment_4) ~ log(St) + poly(Re, 2) +
Factor_Fr + poly(Re, 2)*Factor_Fr, data)[,-1]
resp_4 <- log(data$R_moment_4)
set.seed(325)
moment_4_cv <- cv.glmnet(pred_4_int_poly, resp_4, alpha = 1)
moment_4_bestlam <- moment_4_cv$lambda.min
moment_4 <- glmnet(pred_4_int_poly, resp_4, alpha = 1,
lambda = moment_4_bestlam)
#coef(moment_4)
moment_4_predictions <- predict(moment_4, moment_4_bestlam,
newx = pred_4_int_poly)
tss_m4 <- sum((log(data$R_moment_4) - mean(log(data$R_moment_4)))^2)
rss_m4 <- sum((moment_4_predictions - log(data$R_moment_4))^2)
rsq_m4 <- 1 - rss_m4/tss_m4
#rsq_m4
#mean(mom_4_lasso_6_mse)
plot(lm(log(R_moment_4) ~ log(St) + poly(Re, 2) + Factor_Fr +
poly(Re, 2)*Factor_Fr, data))
rsq_m4
moment_4_bestlam
mean(mom_4_lasso_6_mse)
exp(0.018)
r1_boxcox <- boxcox(lm(data$R_moment_1 ~ 1))
r2_boxcox <- boxcox(lm(data$R_moment_2 ~ 1))
hist(data$R_moment_1) # Extremely right-skewed
hist(log(data$R_moment_1)) # Better, still a gap around -4
hist(data$R_moment_1) # Extremely right-skewed
hist(log(data$R_moment_1)) # Better, still a gap around -4
r1_boxcox <- boxcox(lm(data$R_moment_1 ~ 1))
hist(data$St) # right-skewed, may need log transformation
hist(log(data$St)) # better, still not ideal
plot(moment_1)
testing <- read.csv("data-test.csv")
testing <- testing %>%
mutate(Factor_Fr = if_else(Fr < Inf, "finite", "infinite")) %>%
mutate(Factor_Fr = factor(Factor_Fr))
moment_1_pred <- predict(moment_1, testing)
testing
moment_1_pred
log(data$R_moment_1)
data$R_moment_1
exp(moment_1_pred)
moment_1_pred_exp <- exp(moment_1_pred)
moment_2_pred <- predict(moment_2, testing)
moment_2_pred_exp <- exp(moment_2_pred)
moment_2_pred_exp
testing_mod <- model.matrix(~ log(St) + poly(Re, 2) +
Factor_Fr + poly(Re, 2)*Factor_Fr, testing)[,-1]
moment_3_pred <- predict(moment_3, moment_3_bestlam, newx = testing_mod)
moment_3_pred
moment_3_pred_exp <- exp(moment_3_pred)
moment_3_pred_exp
moment_4_pred <- predict(moment_4, moment_4_bestlam, newx = testing_mod)
moment_4_pred
moment_4_pred_exp <- exp(moment_4_pred)
moment_4_pred
moment_4_pred_exp
exp(32)
pred_out <- c("R_moment_1" = moment_1_pred_exp)
pred_out
pred_out <- data.frame(c("R_moment_1" = moment_1_pred_exp))
pred_out
pred_out <- data.frame(t(c("R_moment_1" = moment_1_pred_exp)))
pred_out
moment_1_pred_exp
pred_out <- data.frame(t(c("R_moment_1" = moment_1_pred_exp)))
pred_out <- rbind(pred_out,
c("R_moment_2" = moment_2_pred_exp),
c("R_moment_3" = moment_3_pred_exp),
c("R_moment_4" = moment_4_pred_exp))
pred_out
t(pred_out)
rbind(moment_1_pred_exp, moment_2_pred_exp)
t(rbind(moment_1_pred_exp, moment_2_pred_exp))
moment_1_pred <- predict(moment_1, testing)
R_moment_1 <- exp(moment_1_pred)
moment_2_pred <- predict(moment_2, testing)
R_moment_2 <- exp(moment_2_pred)
testing_mod <- model.matrix(~ log(St) + poly(Re, 2) +
Factor_Fr + poly(Re, 2)*Factor_Fr, testing)[,-1]
moment_3_pred <- predict(moment_3, moment_3_bestlam, newx = testing_mod)
R_moment_3 <- exp(moment_3_pred)
moment_4_pred <- predict(moment_4, moment_4_bestlam, newx = testing_mod)
R_moment_4 <- exp(moment_4_pred)
t(rbind(R_moment_1, R_moment_2, R_moment_3, R_moment_4))
R_moment_3
R_moment_4
R_moment_2
R_moment_3
R_moment_3[1]
R_moment_3[,1]
t(rbind(R_moment_1, R_moment_2, R_moment_3[,1], R_moment_4[,1]))
data.frame(t(rbind(R_moment_1, R_moment_2, R_moment_3[,1], R_moment_4[,1])))
pred_out <- data.frame(t(rbind(R_moment_1, R_moment_2, R_moment_3[,1],
R_moment_4[,1])))
names(pred_out, c("R_moment_1", "R_moment_2", "R_moment_3", "R_moment_4"))
rename(pred_out, c("R_moment_1", "R_moment_2", "R_moment_3", "R_moment_4"))
rename(pred_out, c("R_moment_1", "R_moment_2", "V3" = "R_moment_3",
"V4" = "R_moment_4"))
rename(pred_out, c("R_moment_1", "R_moment_2", "R_moment_3" = "V3",
"V4" = "R_moment_4"))
rename(pred_out, c("R_moment_1", "R_moment_2", "R_moment_3" = "V3",
"R_moment_4" = "V4"))
rename(pred_out, c("R_moment_3" = "V3",
"R_moment_4" = "V4"))
pred_out <- rename(pred_out, c("R_moment_3" = "V3", "R_moment_4" = "V4"))
write.csv(pred_out, "Test_Data_Predictions.csv")
